---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
//import { Select } from "free-astro-components";
import { Image } from "astro:assets";
import chshimage from "../../src/content/blog/Chsh-illustration.png";
---

<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />

		<main>
			<div
				style="display:flex; align-items:center; justify-content:center;"
			>
				<h1>CHSH Tinkerer</h1><br /><br>
				
			</div>
			<div
				style="display:flex; align-items:center; justify-content:center;"
			>
				<h3>CHSH Game Defintion <br> and Basic Strategies</h2>
				
			</div>
			<div style="display:flex; align-items:center; justify-content:center;">
				<Image
					src={chshimage}
					alt="chsh game"
					width="500"
					height="500"
				/>
			</div>
			<p>
				The CHSH game is a quantum game that highlights that the
				benefits of quantum entaglement can be used to perform better
				than computational (ordinary) strategies.
				<br />
				<br />
				The game starts off with a Referee and two players, Alice and Bob.
				The Referee gives Alice the value x and Bob the value y.
				<br />
				X and Y are either 0 or 1.
				<br />
				Alice and Bob must give the Referee values a and b. Once again, these
				are 0 or 1. Alice and Bob want to succeed by having the equation
				be true. The equation means x AND y equals a XOR B.
				<br />
				If x and y are both 1, a must be different than b. <br />
				Otherwise, a and b must be the same.<br />
				<br />
				The stipulation of this scenario is that <strong
					>Alice and Bob can NOT communicate</strong
				>
				after recieving their bits. At most, they can coordinate beforehand.
			</p>
			<p>
				<br />
				Below are the basic strategies that can be used with the information
				Alice and Bob have present.
			</p>
			<div>
				<label for="aliceStrategy">Alice Strategy:</label>
				<select id="aliceStrategy" name="aliceStrategy">
					<option value="0">a = 0</option>
					<option value="1">a = 1</option>
					<option value="2">a = x</option>
					<option value="3">a = !x</option>
				</select>

				<br />

				<label for="bobStrategy">Bob Strategy:</label>
				<select id="bobStrategy" name="bobStrategy">
					<option value="0">b = 0</option>
					<option value="1">b = 1</option>
					<option value="2">b = y</option>
					<option value="3">b = !y</option>
				</select>

				<style>
					.table_component {
						overflow: auto;
						width: 100%;
					}

					.table_component table {
						border: 1px solid #dededf;
						height: 100%;
						width: 100%;
						table-layout: fixed;
						border-collapse: collapse;
						border-spacing: 1px;
						text-align: left;
					}

					.table_component caption {
						caption-side: top;
						text-align: left;
					}

					.table_component th {
						border: 1px solid #dededf;
						background-color: #e4e9ec;
						color: #000000;
						padding: 5px;
					}

					.table_component td {
						border: 1px solid #dededf;
						background-color: #ffffff;
						color: #000000;
						padding: 5px;
					}
				</style>
				<div class="table_component" role="region" tabindex="0">
					<table>
						<caption>Computational Table</caption>
						<thead>
							<tr>
								<th></th>
								<th></th>
								<th>Bob</th>
								<th></th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<th></th>
								<th></th>
								<th>y = 0</th>
								<th>y = 1</th>
							</tr>
							<tr>
								<th>Alice</th>
								<th>x = 0</th>
								<td id="x0y0">True</td>
								<td id="x0y1">True</td>
							</tr>
							<tr>
								<th></th>
								<th>x = 1</th>
								<td id="x1y0">True</td>
								<td id="x1y1">False</td>
							</tr>
						</tbody>
					</table>
					<span>Probablitilty of Winning : </span><span
						id="probWinText">75</span
					><span>%</span>
					<p>
						Throughout the 16 posssible strategies, the best success
						rate we can get is 75%. <br />
						You can try it yourself above!<br />
						A common misconception is that if we randomly choose Alice
						and Bob's strategies, we can get a better success rate. This
						may work in the short term, however as we increase the amount
						of trials, we reach the limit of 75%. Also, randomly choosing
						the strategy still leaves us with a winning probability of
						75% in the best case.
					</p>
					<script>
						var aliceselectedText = Number(0);
						// Alice dropdown alert
						document
							.getElementById("aliceStrategy")
							.addEventListener("change", function () {
								aliceselectedText = Number(this.value);
								//alert("Alice selected value: " + aliceselectedText + "Bob selected value: " +bobselectedText );

								checkall();
							});

						// Bob dropdown alert
						var bobselectedText = Number(0);
						document
							.getElementById("bobStrategy")
							.addEventListener("change", function () {
								bobselectedText = Number(this.value);
								//alert("Bob selected value: " +bobselectedText +" Alice has " +aliceselectedText,);
								checkall();
							});

						function checkall() {
							//alert(aliceselectedText + " " + bobselectedText + " ");
							//alert( (0 && 0) == (aliceselectedText !== bobselectedText) );
							let sum = 0;
							sum += checkCHSHtable(
								0,
								0,
								aliceselectedText,
								bobselectedText,
							);
							sum += checkCHSHtable(
								0,
								1,
								aliceselectedText,
								bobselectedText,
							);
							sum += checkCHSHtable(
								1,
								0,
								aliceselectedText,
								bobselectedText,
							);
							sum += checkCHSHtable(
								1,
								1,
								aliceselectedText,
								bobselectedText,
							);
							//alert(sum /4);
							document.getElementById("probWinText").textContent =
								(sum / 4) * 100;
						}
						function checkCHSHtable(x, y, a, b) {
							var identitfier = "x" + x + "y" + y;

							if (a == 2) {
								a = x;
							} else if (a == 3) {
								a = 1 - x;
							}
							if (b == 2) {
								b = y;
							} else if (b == 3) {
								b = 1 - y;
							}
							if ((x && y) == (a !== b)) {
								document.getElementById(
									identitfier,
								).textContent = "True";
								return 1;
							} else {
								document.getElementById(
									identitfier,
								).textContent = "False";
								return 0;
							}
						}
					</script>
				</div>
			</div>
		</main>

		<Footer />
	</body>
</html>
